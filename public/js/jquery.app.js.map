{"version":3,"sources":["jquery.coffee","jquery.app.js"],"names":["DestinationItem","TagItem","prototype","stringToItem","str","tag_id","tag_name","itemToString","item","compareItems","item1","item2","des_name","$","Ulibi","fn","extend","UlibiTagEditor","options","log","settings","debug","wrapClass","tags","itemManager","msg","console","this","each","width","parent","innerWidth","textext","plugins","html","wrap","tag","ext","bind","e","data","query","target","trigger","result","filter","jQuery","call"],"mappings":"CAAA,WAAA,GAAAA,GAAAC,CAAMA,GAAA,WCIF,QAASA,MAiBT,MAfAA,GAAQC,UDLVC,aAAc,SAACC,GCMX,ODLFC,OAAQ,EACRC,SAAUF,ICUVH,EAAQC,UDTVK,aAAc,SAACC,GCUX,MDVkBA,GAAK,UCazBP,EAAQC,UDZVO,aAAc,SAACC,EAAOC,GCalB,MDb0BD,GAAM,SAAaC,EAAM,QCgB9CV,KDfLD,EAAA,WCoBF,QAASA,MAgBT,MAdAA,GAAgBE,UDrBlBC,aAAc,SAACC,GCsBX,ODrBFQ,SAAUR,IC0BVJ,EAAgBE,UDzBlBK,aAAc,SAACC,GC0BX,MD1BkBA,GAAK,UC6BzBR,EAAgBE,UD5BlBO,aAAc,SAACC,EAAOC,GC6BlB,MD7B0BD,GAAM,WAAeC,EAAM,UCgChDX,KD/BXa,EAAEC,OACAb,QAASA,EACTD,gBAAiBA,GACnB,SAAEa,GCsCE,MDrCFA,GAAEE,GAAGC,QACHC,eAAgB,SAACC,GACf,GAAAC,GAAAC,CCoDE,ODpDFA,IACEC,OAAO,EACPC,UAAW,GACXC,QACAC,gBACFJ,EAASP,EAAEG,OAAOI,EAAUF,GAC5BC,EAAI,SAACM,GACiBL,EAASC,OCwCF,mBAAZK,UAAuC,OAAZA,SDxC1CA,QAASP,IAAIM,IAEfE,KAACC,KAAK,WC8DF,MD7DFf,GAAEc,MAAME,MAAOhB,EAAEc,MAAMG,SAASC,aAAa,IAC7ClB,EAAEc,MAAMK,SACNC,QAAW,oBACXC,MACEC,KAAM,yBAA0Bf,EAASE,UAAU,wCACnDc,IAAK,uKACPC,KACEb,YAAaJ,EAASI,eACzBc,KAAK,iBAAiB,SAACC,EAAEC,GACxB,GAAAC,GAAAT,CCgDE,ODhDFA,GAAUnB,EAAE0B,EAAEG,QAAQV,UAAU,GAChCS,GAAYD,EAAUA,EAAKC,MAAW,KAAO,GAC7C5B,EAAEc,MAAMgB,QAAQ,kBACdC,OAASZ,EAAQR,cAAcqB,OAAOzB,EAASG,KAAMkB,OACzDtB,EAAI,gCACV2B,UCqDCC,KAAKpB","file":"jquery.app.js","sourcesContent":["class TagItem\n  stringToItem: (str)->\n    tag_id: 0\n    tag_name: str\n  itemToString: (item)->item['tag_name']\n  compareItems: (item1, item2)->item1['tag_id'] == item2['tag_id']\nclass DestinationItem\n  stringToItem: (str)->\n    des_name: str\n  itemToString: (item)->item['des_name']\n  compareItems: (item1, item2)->item1['des_name'] == item2['des_name']\n$.Ulibi=\n  TagItem: TagItem\n  DestinationItem: DestinationItem\n(($) ->\n  $.fn.extend\n    UlibiTagEditor: (options)->\n      settings=\n        debug: false\n        wrapClass: ''\n        tags: []\n        itemManager: {}\n      settings=$.extend settings, options\n      log=(msg)->\n        console?.log msg if settings.debug\n        return\n      @each ()->\n        $(this).width ($(this).parent().innerWidth()-24)\n        $(this).textext\n          'plugins': 'tags autocomplete'\n          'html':\n            wrap: \"<div class=\\\"text-core \"+settings.wrapClass+\"\\\"><div class=\\\"text-wrap\\\"></div></div>\"\n            tag: \"<div class=\\\"text-tag\\\"><div class=\\\"text-button\\\"><span class=\\\"text-label\\\"/><a class=\\\"custom-edit\\\"/><a class=\\\"text-remove\\\"><i class=\\\"fa fa-times\\\"></i></a></div></div>\"\n          ext:\n            itemManager: settings.itemManager\n        .bind 'getSuggestions',(e,data)->\n          textext = $(e.target).textext()[0]\n          query = (if data then data.query else '') || ''\n          $(this).trigger 'setSuggestions',\n            result : textext.itemManager().filter settings.tags, query\n        log 'UlibiTagEditor worked!'\n) jQuery",null],"sourceRoot":"/source/"}